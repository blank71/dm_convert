{%- import 'macros.jinja' as macros %}
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeImage
metadata:
{%- set properties = resource.get('properties', {}) %}
{{- macros.fields(properties, {'labels': 'labels'}, ' ' * 2) }}
{%- if 'name' in properties %}
  name: {{ properties['name'] | arbitrary_reference }}
{%- else %}
  name: {{ resource['name'] | arbitrary_reference }}
{%- endif %}
{%- if properties | set_difference(['name', 'labels', 'project']) %}
{# At least one field of properties was not converted to metadata and will be converted to spec. #}
spec:
  {{- macros.fields(properties, {
    'description': 'description',
    'sourceDisk': 'diskRef',
    'diskSizeGb': 'diskSizeGb',
    'family': 'family',
    'guestOsFeatures': 'guestOsFeatures',
    'licenses': 'licenses',
    'sourceImage': 'sourceImageRef',
    'sourceSnapshot': 'sourceSnapshotRef',
  }, ' ' * 2) }}
  {%- if 'rawDisk' in properties %}
    {%- set raw_disk = properties['rawDisk'] %}
  rawDisk:
    {{- macros.fields(raw_disk, {
      'containerType': 'containerType',
      'source': 'source',
      'sha1Checksum': 'sha1',
    }, ' ' * 4) }}
  {%- endif %}
{%- endif %}
{%- set unconvertable = properties | missing_fields((
  'sourceType',
  'shieldedInstanceInitialState',
  'sourceDiskEncryptionKey',
  'archiveSizeBytes',
  'storageLocations',
  'deprecated',
  'labelFingerprint',
  'sourceSnapshotEncryptionKey',
  'sourceImageEncryptionKey',
  'licenseCodes',
  'imageEncryptionKey',
)) %}
{%- if unconvertable %}
# Unconvertable fields found:
{{ unconvertable | join('\n# ') }}
{%- endif %}
