{%- import 'macros.jinja' as macros %}
apiVersion: logging.cnrm.cloud.google.com/v1beta1
kind: LoggingLogSink
metadata:
{%- set properties = resource.get('properties', {}) %}
{{- macros.fields(properties, {'labels': 'labels'}, ' ' * 2) }}
{%- if 'name' in properties %}
  name: {{ properties['name'] | arbitrary_reference }}
{%- else %}
  name: {{ resource['name'] | arbitrary_reference }}
{%- endif %}
{%- if properties | set_difference(['name', 'labels', 'project']) %}
{# At least one field of properties was not converted to metadata and will be converted to spec. #}
spec:
  {{- macros.fields(properties, {
    'bigqueryOptions': 'bigqueryOptions',
    'description': 'description',
    'disabled': 'disabled',
    'filter': 'filter',
    'includeChildren': 'includeChildren',
    'uniqueWriterIdentity': 'uniqueWriterIdentity'
  }, ' ' * 2) }}
  {%- if 'destination' in properties %}
    {%- set destination = properties['destination'] %}
  destination:
    {%- if 'dataset' in destination %}
    bigQueryDatasetRef: {{ destination | typed_reference }}
    {%- elif 'topic' in destination %}
    pubSubTopicRef: {{ destination | typed_reference }}
    {%- else %}
    storageBucketRef: {{ destination | typed_reference }}
    {%- endif %}
  {%- endif %}
{%- set parent = resource['properties']['parent'] %}
{%- for type in ['folder', 'project', 'organization'] %}
  {%- if type in parent %}
  {%- set parentValue = parent.split('/', 1)[-1] %}
  {{ type }}Ref: {{ parentValue | typed_reference }}
  {%- endif %}
{%- endfor %}
{%- endif %}
{%- set unconvertable = properties | missing_fields((
  'outputVersionFormat',
)) %}
{%- if unconvertable %}
# Unconvertable fields found:
# {{ unconvertable | join('\n# ') }}
{%- endif %}

